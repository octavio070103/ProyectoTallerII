<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sidebarTime.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>